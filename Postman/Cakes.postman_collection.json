{
	"info": {
		"_postman_id": "0f835f9f-20f4-4141-bd07-59f0517536c9",
		"name": "Портал администратора кондитерской",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Тест-кейс 1 - торт 1",
			"item": [
				{
					"name": "предварительный просмотр списка",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>НОМЕР</th>\r",
									"            <th>НАЗВАНИЕ</th>\r",
									"        </tr>\r",
									"\r",
									"        {{#each response}}\r",
									"            <tr>\r",
									"                <td>{{id}}</td>\r",
									"                <td>{{name}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"\r",
									"    </table>\r",
									"`;\r",
									"\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}{{API}}",
							"host": [
								"{{baseURL}}{{API}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "торт с рандомными названием и описанием, без изображения",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const jsonBody = pm.response.json();\r",
									"pm.collectionVariables.set(\"cake_1_Id\", jsonBody.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.replaceIn('{{$randomProduct}}')\r",
									"pm.variables.replaceIn('{{$randomProductAdjective}}')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomProduct}}\", \r\n    \"photoFileName\": \"\", \r\n    \"description\": \"{{$randomProductAdjective}}\", \r\n    \"forWhoId\": 0, \r\n    \"occasionId\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}{{API}}add",
							"host": [
								"{{baseURL}}{{API}}add"
							]
						}
					},
					"response": []
				},
				{
					"name": "проверка добавления торта в список",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>НОМЕР</th>\r",
									"            <th>НАЗВАНИЕ</th>\r",
									"        </tr>\r",
									"\r",
									"        {{#each response}}\r",
									"            <tr>\r",
									"                <td>{{id}}</td>\r",
									"                <td>{{name}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"\r",
									"    </table>\r",
									"`;\r",
									"\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}{{API}}",
							"host": [
								"{{baseURL}}{{API}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "удаление торта",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}{{API}}{{cake_1_Id}}",
							"host": [
								"{{baseURL}}{{API}}{{cake_1_Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "проверка удаления торта из списка",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>НОМЕР</th>\r",
									"            <th>НАЗВАНИЕ</th>\r",
									"        </tr>\r",
									"\r",
									"        {{#each response}}\r",
									"            <tr>\r",
									"                <td>{{id}}</td>\r",
									"                <td>{{name}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"\r",
									"    </table>\r",
									"`;\r",
									"\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}{{API}}",
							"host": [
								"{{baseURL}}{{API}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Тест-кейс 2 - торт 2",
			"item": [
				{
					"name": "предварительный просмотр списка",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>НОМЕР</th>\r",
									"            <th>НАЗВАНИЕ</th>\r",
									"        </tr>\r",
									"\r",
									"        {{#each response}}\r",
									"            <tr>\r",
									"                <td>{{id}}</td>\r",
									"                <td>{{name}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"\r",
									"    </table>\r",
									"`;\r",
									"\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}{{API}}",
							"host": [
								"{{baseURL}}{{API}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "торт с рандомным названием, с изображением, без описания",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const jsonBody = pm.response.json();\r",
									"pm.collectionVariables.set(\"cake_2_Id\", jsonBody.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.replaceIn('{{$randomProduct}}')\r",
									"pm.variables.replaceIn('{{$randomProductAdjective}}')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomProduct}}\", \r\n    \"photoFileName\": \"kicgk81zbzskhkdhn16i\", \r\n    \"description\": \"\", \r\n    \"forWhoId\": 1, \r\n    \"occasionId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}{{API}}add",
							"host": [
								"{{baseURL}}{{API}}add"
							]
						}
					},
					"response": []
				},
				{
					"name": "проверка добавления торта в список",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>НОМЕР</th>\r",
									"            <th>НАЗВАНИЕ</th>\r",
									"        </tr>\r",
									"\r",
									"        {{#each response}}\r",
									"            <tr>\r",
									"                <td>{{id}}</td>\r",
									"                <td>{{name}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"\r",
									"    </table>\r",
									"`;\r",
									"\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}{{API}}",
							"host": [
								"{{baseURL}}{{API}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "удаление торта",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}{{API}}{{cake_2_Id}}",
							"host": [
								"{{baseURL}}{{API}}{{cake_2_Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "проверка удаления торта из списка",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>НОМЕР</th>\r",
									"            <th>НАЗВАНИЕ</th>\r",
									"        </tr>\r",
									"\r",
									"        {{#each response}}\r",
									"            <tr>\r",
									"                <td>{{id}}</td>\r",
									"                <td>{{name}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"\r",
									"    </table>\r",
									"`;\r",
									"\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}{{API}}",
							"host": [
								"{{baseURL}}{{API}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Тест-кейс 3 - торт 3",
			"item": [
				{
					"name": "предварительный просмотр списка",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>НОМЕР</th>\r",
									"            <th>НАЗВАНИЕ</th>\r",
									"        </tr>\r",
									"\r",
									"        {{#each response}}\r",
									"            <tr>\r",
									"                <td>{{id}}</td>\r",
									"                <td>{{name}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"\r",
									"    </table>\r",
									"`;\r",
									"\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}{{API}}",
							"host": [
								"{{baseURL}}{{API}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "торт с рандомными описанием, без названия и изображения",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const jsonBody = pm.response.json();\r",
									"pm.collectionVariables.set(\"cake_3_Id\", jsonBody.id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.replaceIn('{{$randomProduct}}')\r",
									"pm.variables.replaceIn('{{$randomProductAdjective}}')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"\", \r\n    \"photoFileName\": \"\", \r\n    \"description\": \"{{$randomProductAdjective}}\", \r\n    \"forWhoId\": 3, \r\n    \"occasionId\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}{{API}}add",
							"host": [
								"{{baseURL}}{{API}}add"
							]
						}
					},
					"response": []
				},
				{
					"name": "проверка добавления торта в список",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>НОМЕР</th>\r",
									"            <th>НАЗВАНИЕ</th>\r",
									"        </tr>\r",
									"\r",
									"        {{#each response}}\r",
									"            <tr>\r",
									"                <td>{{id}}</td>\r",
									"                <td>{{name}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"\r",
									"    </table>\r",
									"`;\r",
									"\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}{{API}}",
							"host": [
								"{{baseURL}}{{API}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "удаление торта",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}{{API}}{{cake_3_Id}}",
							"host": [
								"{{baseURL}}{{API}}{{cake_3_Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "проверка удаления торта из списка",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>НОМЕР</th>\r",
									"            <th>НАЗВАНИЕ</th>\r",
									"        </tr>\r",
									"\r",
									"        {{#each response}}\r",
									"            <tr>\r",
									"                <td>{{id}}</td>\r",
									"                <td>{{name}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"\r",
									"    </table>\r",
									"`;\r",
									"\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}{{API}}",
							"host": [
								"{{baseURL}}{{API}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://buy-cakes.herokuapp.com",
			"type": "string"
		},
		{
			"key": "API",
			"value": "/api/cakes/",
			"type": "string"
		},
		{
			"key": "cake_1_Id",
			"value": "",
			"type": "string"
		},
		{
			"key": "cake_2_Id",
			"value": ""
		},
		{
			"key": "cake_3_Id",
			"value": ""
		}
	]
}